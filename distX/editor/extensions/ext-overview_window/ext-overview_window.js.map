{"version":3,"file":"ext-overview_window.js","sources":["../../../../src/editor/extensions/ext-overview_window/dragmove/dragmove.js","../../../../src/editor/extensions/ext-overview_window/ext-overview_window.js"],"sourcesContent":["// https://github.com/knadh/dragmove.js\n// Kailash Nadh (c) 2020.\n// MIT License.\n// can't use npm version as the dragmove is different.\n\nlet _loaded = false\nconst _callbacks = []\nconst _isTouch = window.ontouchstart !== undefined\n\nexport const dragmove = function (target, handler, parent, onStart, onEnd, onDrag) {\n  // Register a global event to capture mouse moves (once).\n  if (!_loaded) {\n    document.addEventListener(_isTouch ? 'touchmove' : 'mousemove', function (e) {\n      let c = e\n      if (e.touches) {\n        c = e.touches[0]\n      }\n\n      // On mouse move, dispatch the coords to all registered callbacks.\n      for (let i = 0; i < _callbacks.length; i++) {\n        _callbacks[i](c.clientX, c.clientY)\n      }\n    })\n  }\n\n  _loaded = true\n  let isMoving = false; let hasStarted = false\n  let startX = 0; let startY = 0; let lastX = 0; let lastY = 0\n\n  // On the first click and hold, record the offset of the pointer in relation\n  // to the point of click inside the element.\n  handler.addEventListener(_isTouch ? 'touchstart' : 'mousedown', function (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    if (target.dataset.dragEnabled === 'false') {\n      return\n    }\n\n    let c = e\n    if (e.touches) {\n      c = e.touches[0]\n    }\n\n    isMoving = true\n    startX = target.offsetLeft - c.clientX\n    startY = target.offsetTop - c.clientY\n  })\n\n  // On leaving click, stop moving.\n  document.addEventListener(_isTouch ? 'touchend' : 'mouseup', function () {\n    if (onEnd && hasStarted) {\n      onEnd(target, parent, parseInt(target.style.left), parseInt(target.style.top))\n    }\n\n    isMoving = false\n    hasStarted = false\n  })\n\n  // On leaving click, stop moving.\n  document.addEventListener(_isTouch ? 'touchmove' : 'mousemove', function () {\n    if (onDrag && hasStarted) {\n      onDrag(target, parseInt(target.style.left), parseInt(target.style.top))\n    }\n  })\n\n  // Register mouse-move callback to move the element.\n  _callbacks.push(function move (x, y) {\n    if (!isMoving) {\n      return\n    }\n\n    if (!hasStarted) {\n      hasStarted = true\n      if (onStart) {\n        onStart(target, lastX, lastY)\n      }\n    }\n\n    lastX = x + startX\n    lastY = y + startY\n\n    // If boundary checking is on, don't let the element cross the viewport.\n    if (target.dataset.dragBoundary === 'true') {\n      if (lastX < 1 || lastX >= window.innerWidth - target.offsetWidth) {\n        return\n      }\n      if (lastY < 1 || lastY >= window.innerHeight - target.offsetHeight) {\n        return\n      }\n    }\n\n    target.style.left = lastX + 'px'\n    target.style.top = lastY + 'px'\n  })\n}\n\nexport { dragmove as default }\n","/**\n * @file ext-overview_window.js\n *\n * @license MIT\n *\n * @copyright 2013 James Sacksteder\n *\n */\nimport { dragmove } from './dragmove/dragmove.js'\n\nexport default {\n  name: 'overview_window',\n  init ({ _$ }) {\n    const svgEditor = this\n    const { $id, $click } = svgEditor.svgCanvas\n    const overviewWindowGlobals = {}\n\n    // Define and insert the base html element.\n    const propsWindowHtml =\n      '<div id=\"overview_window_content_pane\" style=\"width:100%; word-wrap:break-word;  display:inline-block; margin-top:20px;\">' +\n        '<div id=\"overview_window_content\" style=\"position:relative; padding-left:15px; top:0px;\">' +\n          '<div style=\"background-color:#A0A0A0; display:inline-block; overflow:visible;\">' +\n            '<svg id=\"overviewMiniView\" width=\"132\" height=\"100\" x=\"0\" y=\"0\" viewBox=\"0 0 4800 3600\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\" ' +\n                'xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n              '<use x=\"0\" y=\"0\" xlink:href=\"#svgroot\"> </use>' +\n            '</svg>' +\n            '<div id=\"overview_window_view_box\" style=\"min-width:50px; min-height:50px; position:absolute; top:30px; left:30px; z-index:5; background-color:rgba(255,0,102,0.3);\">' +\n            '</div>' +\n          '</div>' +\n        '</div>' +\n      '</div>'\n    $id('sidepanel_content').insertAdjacentHTML('beforeend', propsWindowHtml)\n\n    // Define dynamic animation of the view box.\n    const updateViewBox = () => {\n      const { workarea } = svgEditor\n      const portHeight = parseFloat(getComputedStyle(workarea, null).height.replace('px', ''))\n      const portWidth = parseFloat(getComputedStyle(workarea, null).width.replace('px', ''))\n      const portX = workarea.scrollLeft\n      const portY = workarea.scrollTop\n      const windowWidth = parseFloat(getComputedStyle($id('svgcanvas'), null).width.replace('px', ''))\n      const windowHeight = parseFloat(getComputedStyle($id('svgcanvas'), null).height.replace('px', ''))\n      const overviewWidth = parseFloat(getComputedStyle($id('overviewMiniView'), null).width.replace('px', ''))\n      const overviewHeight = parseFloat(getComputedStyle($id('overviewMiniView'), null).height.replace('px', ''))\n\n      const viewBoxX = portX / windowWidth * overviewWidth\n      const viewBoxY = portY / windowHeight * overviewHeight\n      const viewBoxWidth = portWidth / windowWidth * overviewWidth\n      const viewBoxHeight = portHeight / windowHeight * overviewHeight\n\n      $id('overview_window_view_box').style.minWidth = viewBoxWidth + 'px'\n      $id('overview_window_view_box').style.minHeight = viewBoxHeight + 'px'\n      $id('overview_window_view_box').style.top = viewBoxY + 'px'\n      $id('overview_window_view_box').style.left = viewBoxX + 'px'\n    }\n    $id('workarea').addEventListener('scroll', () => {\n      if (!(overviewWindowGlobals.viewBoxDragging)) {\n        updateViewBox()\n      }\n    })\n    $id('workarea').addEventListener('resize', updateViewBox)\n    updateViewBox()\n\n    // Compensate for changes in zoom and canvas size.\n    const updateViewDimensions = function () {\n      const viewWidth = parseFloat(getComputedStyle($id('svgroot'), null).width.replace('px', ''))\n      const viewHeight = parseFloat(getComputedStyle($id('svgroot'), null).height.replace('px', ''))\n\n      const viewX = 640\n      const viewY = 480\n\n      const svgWidthOld = parseFloat(getComputedStyle($id('overviewMiniView'), null).width.replace('px', ''))\n      const svgHeightNew = viewHeight / viewWidth * svgWidthOld\n      $id('overviewMiniView').setAttribute('viewBox', viewX + ' ' + viewY + ' ' + viewWidth + ' ' + viewHeight)\n      $id('overviewMiniView').setAttribute('height', svgHeightNew)\n      updateViewBox()\n    }\n    updateViewDimensions()\n\n    // Set up the overview window as a controller for the view port.\n    overviewWindowGlobals.viewBoxDragging = false\n    const updateViewPortFromViewBox = function () {\n      const windowWidth = parseFloat(getComputedStyle($id('svgcanvas'), null).width.replace('px', ''))\n      const windowHeight = parseFloat(getComputedStyle($id('svgcanvas'), null).height.replace('px', ''))\n      const overviewWidth = parseFloat(getComputedStyle($id('overviewMiniView'), null).width.replace('px', ''))\n      const overviewHeight = parseFloat(getComputedStyle($id('overviewMiniView'), null).height.replace('px', ''))\n      const viewBoxX = parseFloat(getComputedStyle($id('overview_window_view_box'), null).getPropertyValue('left').replace('px', ''))\n      const viewBoxY = parseFloat(getComputedStyle($id('overview_window_view_box'), null).getPropertyValue('top').replace('px', ''))\n\n      const portX = viewBoxX / overviewWidth * windowWidth\n      const portY = viewBoxY / overviewHeight * windowHeight\n      $id('workarea').scrollLeft = portX\n      $id('workarea').scrollTop = portY\n    }\n    const onStart = () => {\n      overviewWindowGlobals.viewBoxDragging = true\n      updateViewPortFromViewBox()\n    }\n    const onEnd = (el, parent, _x, _y) => {\n      if ((el.offsetLeft + el.offsetWidth) > parseFloat(getComputedStyle(parent, null).width.replace('px', ''))) {\n        el.style.left = (parseFloat(getComputedStyle(parent, null).width.replace('px', '')) - el.offsetWidth) + 'px'\n      } else if (el.offsetLeft < 0) {\n        el.style.left = '0px'\n      }\n      if ((el.offsetTop + el.offsetHeight) > parseFloat(getComputedStyle(parent, null).height.replace('px', ''))) {\n        el.style.top = (parseFloat(getComputedStyle(parent, null).height.replace('px', '')) - el.offsetHeight) + 'px'\n      } else if (el.offsetTop < 0) {\n        el.style.top = '0px'\n      }\n      overviewWindowGlobals.viewBoxDragging = false\n      updateViewPortFromViewBox()\n    }\n    const onDrag = function () {\n      updateViewPortFromViewBox()\n    }\n    const dragElem = document.querySelector('#overview_window_view_box')\n    const parentElem = document.querySelector('#overviewMiniView')\n    dragmove(dragElem, dragElem, parentElem, onStart, onEnd, onDrag)\n\n    $click($id('overviewMiniView'), (evt) => {\n      // Firefox doesn't support evt.offsetX and evt.offsetY.\n      const mouseX = (evt.offsetX || evt.originalEvent.layerX)\n      const mouseY = (evt.offsetY || evt.originalEvent.layerY)\n      const overviewWidth = parseFloat(getComputedStyle($id('overviewMiniView'), null).width.replace('px', ''))\n      const overviewHeight = parseFloat(getComputedStyle($id('overviewMiniView'), null).height.replace('px', ''))\n      const viewBoxWidth = parseFloat(getComputedStyle($id('overview_window_view_box'), null).getPropertyValue('min-width').replace('px', ''))\n      const viewBoxHeight = parseFloat(getComputedStyle($id('overview_window_view_box'), null).getPropertyValue('min-height').replace('px', ''))\n\n      let viewBoxX = mouseX - 0.5 * viewBoxWidth\n      let viewBoxY = mouseY - 0.5 * viewBoxHeight\n      // deal with constraints\n      if (viewBoxX < 0) {\n        viewBoxX = 0\n      }\n      if (viewBoxY < 0) {\n        viewBoxY = 0\n      }\n      if (viewBoxX + viewBoxWidth > overviewWidth) {\n        viewBoxX = overviewWidth - viewBoxWidth\n      }\n      if (viewBoxY + viewBoxHeight > overviewHeight) {\n        viewBoxY = overviewHeight - viewBoxHeight\n      }\n      $id('overview_window_view_box').style.top = viewBoxY + 'px'\n      $id('overview_window_view_box').style.left = viewBoxX + 'px'\n      updateViewPortFromViewBox()\n    })\n\n    return {\n      name: 'overview window',\n      canvasUpdated: updateViewDimensions,\n      workareaResized: updateViewBox\n    }\n  }\n}\n"],"names":["_loaded","_callbacks","_isTouch","window","ontouchstart","undefined","dragmove","target","handler","parent","onStart","onEnd","onDrag","document","addEventListener","e","c","touches","i","length","clientX","clientY","isMoving","hasStarted","startX","startY","lastX","lastY","stopPropagation","preventDefault","dataset","dragEnabled","offsetLeft","offsetTop","parseInt","style","left","top","push","move","x","y","dragBoundary","innerWidth","offsetWidth","innerHeight","offsetHeight","name","init","_ref","svgEditor","$id","$click","svgCanvas","overviewWindowGlobals","propsWindowHtml","insertAdjacentHTML","updateViewBox","workarea","portHeight","parseFloat","getComputedStyle","height","replace","portWidth","width","portX","scrollLeft","portY","scrollTop","windowWidth","windowHeight","overviewWidth","overviewHeight","viewBoxX","viewBoxY","viewBoxWidth","viewBoxHeight","minWidth","minHeight","viewBoxDragging","updateViewDimensions","viewWidth","viewHeight","viewX","viewY","svgWidthOld","svgHeightNew","setAttribute","updateViewPortFromViewBox","getPropertyValue","el","_x","_y","dragElem","querySelector","parentElem","evt","mouseX","offsetX","originalEvent","layerX","mouseY","offsetY","layerY","canvasUpdated","workareaResized"],"mappings":"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"}