<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="SVG-edit" height="600">
<Require feature="rpc" />
</ModulePrefs>
<Content type="html">
<![CDATA[

<script type="text/javascript" src="http://wave-api.appspot.com/public/wave.js"></script>
<link rel="stylesheet" href="http://svg-edit.googlecode.com/svn/trunk/editor/jpicker/jpicker.css" type="text/css"/>
<link rel="stylesheet" href="http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.css" type="text/css"/>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js"></script>
<script type="text/javascript" src="http://svg-edit.googlecode.com/svn/trunk/editor/js-hotkeys/jquery.hotkeys.min.js"></script>
<script type="text/javascript" src="http://svg-edit.googlecode.com/svn/trunk/editor/jpicker/jpicker.js"></script>
<script type="text/javascript" src="http://svg-edit.googlecode.com/svn/trunk/editor/svgcanvas.js"></script>
<script type="text/javascript" src="http://svg-edit.googlecode.com/svn/trunk/editor/svg-editor.js"></script>
 

<div id="svg_editor">

<div id="color_picker" class="tools_flyout"></div>

<div id="tools_rect" class="tools_flyout">
<div id="tool_square" title="Square"></div>
<div id="tool_rect" title="Rectangle"></div>
<div id="tool_fhrect" title="Free-Hand Rectangle"></div>
</div>

<div id="tools_ellipse" class="tools_flyout">
<div id="tool_circle" title="Circle"></div>
<div id="tool_ellipse" title="Ellipse"></div>
<div id="tool_fhellipse" title="Free-Hand Ellipse"></div>
</div>

<div id="context_tools" class="tools_panel">
	<!-- File-like buttons: New, Save -->
	<div>
	<img class="tool_button" id="tool_clear" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/clear.png" title="New Image [N]" alt="Clear" />
	<img class="tool_button" id="tool_save" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/save.png" title="Save Image [S]" alt="Save"/>
	</div>

	<!-- Buttons when something is selected -->
	<div id="selected_panel">
	<img class="tool_sep" src="images/sep.png" alt="|"/>
	<img class="tool_button" id="tool_delete" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/delete.png" title="Delete Element [X]" alt="Delete"/>
	<img class="tool_button" id="tool_move_top" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/move_top.png" title="Move to Top" alt="Top"/>
	<img class="tool_button" id="tool_move_bottom" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/move_bottom.png" title="Move to Bottom" alt="Bottom"/>
	</div>

	<!-- TODO: also add x, y, width, height -->
	<div id="rect_panel">
		<img class="tool_sep" src="images/sep.png" alt="|"/>
		<label class="rect_tool" >Radius:</label>
		<!-- TODO: turn this into a spinner control! -->
		<select id="rect_radius" class="rect_tool" title="Change Rectangle Corner Radius" alt="Corner Radius">
			<option selected="selected" value="0">0</option>
			<option value="1">1</option>
			<option value="2">2</option>
			<option value="3">3</option>
			<option value="5">5</option>
			<option value="7">7</option>
			<option value="10">10</option>
			<option value="15">15</option>
			<option value="20">20</option>
		</select>
	</div>

	<!-- TODO: add a circle_panel, ellipse_panel, line_panel -->

	<div id="text_panel">
		<img class="tool_sep" src="images/sep.png" alt="|"/>
		<select id="font_family" class="text_tool" title="Change Font Family">
			<option selected="selected" value="serif">serif</option>
			<option value="sans-serif">sans-serif</option>
			<option value="cursive">cursive</option>
			<option value="fantasy">fantasy</option>
			<option value="monospace">monospace</option>
		</select>
		<select id="font_size" class="text_tool" title="Change Font Size">
			<option value="6pt">6pt</option>
			<option value="8pt">8pt</option>
			<option value="10pt">10pt</option>
			<option selected="selected" value="12pt">12pt</option>
			<option value="14pt">14pt</option>
			<option value="16pt">16pt</option>
			<option value="20pt">20pt</option>
			<option value="24pt">24pt</option>
			<option value="32pt">32pt</option>
			<option value="48pt">48pt</option>
			<option value="64pt">64pt</option>
			<option value="72pt">72pt</option>
			<option value="80pt">80pt</option>
			<option value="96pt">96pt</option>
			<option value="120pt">120pt</option>
		</select>
		<input id="text" class="text_tool" type="text" title="Change text contents" size="40"/>
	</div>
</div>

<div id="tools" class="tools_panel">

<img class="tool_button_current" id="tool_select" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/select.png" title="Select Tool [1]" alt="Select"/><br/>
<img class="tool_button" id="tool_path" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/path.png" title="Pencil Tool [2]" alt="Pencil"/><br/>
<img class="tool_button" id="tool_line" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/line.png" title="Line Tool [3]" alt="Line"/><br/>
<img class="tool_button" id="tools_rect_show" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/square.png" title="Square/Rect Tool [4/Shift+4]" alt="Square"/><br/>
<img class="tool_button" id="tools_ellipse_show" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/circle.png" title="Ellipse/Circle Tool [5/Shift+5]" alt="Circle"/><br/>
<img class="tool_button" id="tool_text" src="http://svg-edit.googlecode.com/svn/trunk/editor/images/text.png" title="Text Tool [6]" alt="Text"/>

<hr/>

<div>opacity<br/>
<select id="group_opacity" title="Change group opacity">
<option selected="selected" value="1">100 %</option>
<option value="0.9">90 %</option>
<option value="0.8">80 %</option>
<option value="0.7">70 %</option>
<option value="0.6">60 %</option>
<option value="0.5">50 %</option>
<option value="0.4">40 %</option>
<option value="0.3">30 %</option>
<option value="0.2">20 %</option>
<option value="0.1">10 %</option>
</select>
</div>

<hr/>

<div>fill
<div id="fill_color" title="Change fill color"></div>
<select id="fill_opacity" title="Change fill opacity">
<option selected="selected" value="1">100 %</option>
<option value="0.9">90 %</option>
<option value="0.8">80 %</option>
<option value="0.7">70 %</option>
<option value="0.6">60 %</option>
<option value="0.5">50 %</option>
<option value="0.4">40 %</option>
<option value="0.3">30 %</option>
<option value="0.2">20 %</option>
<option value="0.1">10 %</option>
</select>
</div>

<hr/>

<div>stroke
<div id="stroke_color" title="Change stroke color"></div>
<div>
<select id="stroke_width" title="Change stroke width">
<option selected="selected" value="1">1</option>
<option value="2">2</option>
<option value="3">3</option>
<option value="5">5</option>
<option value="7">7</option>
</select>
</div><div>
<select id="stroke_style" title="Change stroke dash style">
<option selected="selected" value="none">---</option>
<option value="2,2">...</option>
<option value="5,5">- -</option>
<option value="5,2,2,2">- .</option>
<option value="5,2,2,2,2,2">- ..</option>
</select>
</div>
<div>
<select id="stroke_opacity" title="Change stroke opacity">
<option selected="selected" value="1">100 %</option>
<option value="0.9">90 %</option>
<option value="0.8">80 %</option>
<option value="0.7">70 %</option>
<option value="0.6">60 %</option>
<option value="0.5">50 %</option>
<option value="0.4">40 %</option>
<option value="0.3">30 %</option>
<option value="0.2">20 %</option>
<option value="0.1">10 %</option>
</select>
</div>
</div>

</div>

<div id="workarea">

<style id="styleoverrides" type="text/css"></style>
<div id="svgcanvas">
</div>

<div id="palette_holder">
<div id="palette" title="Click to change fill color, shift-click to change stroke color">
</div>
</div>

</div>

<div id="footer" class="tools_panel">
SVG-edit Google Wave Gadget @ <a href="http://svg-edit.googlecode.com/" target="_blank">http://svg-edit.googlecode.com/</a>
</div>

</div>

<script type="text/javascript">

	var svgCanvas = null;

	function stateUpdated() {
		// 'state' is an object of key-value pairs that map ids to JSON serialization of SVG elements
		// 'keys' is an array of all the keys in the state
		var state = wave.getState();
		var keys = state.getKeys();
		svgCanvas.each(function(e) {
			// 'this' is the SVG DOM element node (ellipse, rect, etc)
			// 'e' is an integer describing the position within the document
			var k = this.id;
			var v = state.get(k);
			if (v) {
				var ob;
				eval("ob=" + v); // FIXME: Yes, I'm using eval... Dirty, dirty..
				if (ob) {
					svgCanvas.updateElementFromJson(ob);
				} else {
					var node = svgdoc.getElementById(k);
					if (node) node.parentNode.removeChild(node);
				}
				keys.remove(k);
			} else {
				this.parentNode.removeChild(this);
			}
		});

		// New nodes
		for (var k in keys) {
			var ob;
			var v = state.get(keys[k]);
			eval("ob=" + v); // FIXME: Yes, I'm using eval... Dirty, dirty..
			if (ob) svgCanvas.updateElementFromJson(ob)
		}
	}
	
	function myPrintJson(a, b, e) {
  		if(!a || typeof a.valueOf() != "object") {
    		if(typeof a == "string")return"'" + a + "'";
			else if(a instanceof Function)return"[function]";
    		return"" + a
  		}
  		var c = [], f = wave.util.isArray_(a), d = f ? "[]" : "{}", h = b ? "\n" : "", k = b ? " " : "", l = 0, g = e || 1;
  		b || (g = 0);
  		c.push(d.charAt(0));
		for(var i in a) {
			var j = a[i];
    		l++ > 0 && c.push(", ");
    		if(f)
    			c.push(myPrintJson(j, b, g + 1));
    		else {
      			c.push(h);
      			c.push(wave.util.toSpaces_(g));
      			c.push("'" + i + "':");
      			c.push(k);
      			c.push(myPrintJson(j, b, g + 1))
    		}
  		}
  		if(!f) {
    		c.push(h);
    		c.push(wave.util.toSpaces_(g - 1))
  		}
  		c.push(d.charAt(1));
  		return c.join("")
	}	

	function sendDelta(svgCanvas, elem) {
		if (!wave) return;
		var delta = {};
		var attrs = {};
		var a = elem.attributes;
		for (var i = 0; i < a.length; i++) {
			attrs[a.item(i).nodeName] = a.item(i).nodeValue;
		}
		var ob = { element: elem.nodeName, attr: attrs };
		// wave.util.printJson has a bug where keys  are not quoted like 'stroke-width'
		delta[elem.id] = myPrintJson(ob, true);
		wave.getState().submitDelta(delta);
	}
	
	function getId(objnum) {
		return "svg_"+wave.getViewer().getId()+"_"+objnum;
	}

	function main() {
		svgCanvas = svg_edit_setup();
		if (wave && wave.isInWaveContainer()) {
			wave.setStateCallback(stateUpdated);
		}
		svgCanvas.bind("changed", sendDelta);
		svgCanvas.bind("cleared", stateUpdated);
		svgCanvas.bind("getid", getId);
	}

	gadgets.util.registerOnLoadHandler(main);

</script>
]]>
</Content>
</Module>
